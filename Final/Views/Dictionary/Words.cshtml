<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h3>Word List</h3>
            </div>
            <div class="card-body">
                @foreach (var word in Model.Words)
                {
                    <div class="word-item d-flex justify-content-between align-items-center mb-2">
                        <a href="#" class="btn btn-outline-primary word-link" data-id="@word.Id">
                            @word.Text
                        </a>
                        <button class="btn btn-sm btn-secondary speak-btn" data-word="@word.Text">
                            🔊
                        </button>
                    </div>
                }
            </div>
        </div>

        <div class="mt-3">
            <a href="@Url.Action("Flashcard", new { letter = Model.Letter })" class="btn btn-success">Flashcard Mode</a>
            <a href="@Url.Action("Exam", new { letter = Model.Letter })" class="btn btn-warning">Start Exam</a>
            <a href="@Url.Action("MatchingExam", new { letter = Model.Letter })" class="btn btn-info">Matching Exam</a>
        </div>
    </div>

    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h3>Word Definition</h3>
            </div>
            <div class="card-body">
                <div id="word-definition">
                    <p>Select a word to see its definition here.</p>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h3>Story</h3>
            </div>
            <div class="card-body">
                @if (Model.Story != null)
                {
                    <div class="story-content">
                        @Html.Raw(Model.Story.Content)
                    </div>
                }
                else
                {
                    <p>No story available for this letter.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle text-to-speech functionality
        document.querySelectorAll('.speak-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const word = btn.dataset.word;
                const utterance = new SpeechSynthesisUtterance(word);
                window.speechSynthesis.speak(utterance);
            });
        });

        // Handle word definition loading via AJAX
        document.querySelectorAll('.word-link').forEach(link => {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                const wordId = this.dataset.id;

                fetch('/Dictionary/GetWordDefinition?id=' + wordId)
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('word-definition').innerHTML = data;
                    })
                    .catch(error => console.error('Error fetching definition:', error));
            });
        });
    </script>
}
